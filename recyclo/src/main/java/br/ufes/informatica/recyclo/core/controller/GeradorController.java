package br.ufes.informatica.recyclo.core.controller;

import java.io.IOException;
import java.security.NoSuchAlgorithmException;

import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.enterprise.inject.Model;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.inject.Inject;

import org.omnifaces.util.Faces;

import com.github.adminfaces.template.config.AdminConfig;

import br.ufes.inf.nemo.jbutler.ejb.controller.JSFController;
import br.ufes.informatica.recyclo.core.application.GeradorService;
import br.ufes.informatica.recyclo.core.domain.Endereco;
import br.ufes.informatica.recyclo.core.domain.Gerador;
import br.ufes.informatica.recyclo.core.domain.TipoPessoa;
import br.ufes.informatica.recyclo.core.domain.Usuario;
import br.ufes.informatica.recyclo.core.security.LogonMB;
import br.ufes.informatica.recyclo.utils.CriptografiaSenha;
import br.ufes.informatica.recyclo.utils.Utils;

/** TODO: generated by FrameWeb. Should be documented. */
@Model
public class GeradorController extends JSFController {
	/** Serialization id (using default value, change if necessary). */
	private static final long serialVersionUID = 1L;

	/** TODO: generated by FrameWeb. Should be documented. */
	@EJB
	private GeradorService geradorService;
	
	@Inject
	private AdminConfig adminConfig;
	
	@Inject
	private LogonMB logonMB;

	/** TODO: generated by FrameWeb. Should be documented. */
	private Gerador gerador;

	/** TODO: generated by FrameWeb. Should be documented. */
	private Endereco endereco;

	/** TODO: generated by FrameWeb. Should be documented. */
	private String repeteSenha;
	
	private String documento;
	
	public GeradorController() {
		Usuario usuario = new Usuario();
		gerador = new Gerador();
		endereco = new Endereco();
		gerador.setUsuario(usuario);
	}
	
	@PostConstruct
    public void init(){
         if (logonMB != null) {
        	 if (logonMB.getGerador() != null) {
        		 gerador = logonMB.getGerador();
        	 }
         }
    }

	/** TODO: generated by FrameWeb. Should be documented. */
	public void incluirGerador() throws IOException, NoSuchAlgorithmException {
		
		// Chama o método da classe de servico para incluir o gerador.
		gerador.getUsuario().setPermissao("Gerador");
		gerador.getUsuario().setDataCadastro(new java.util.Date());
		if (gerador.getUsuario().getTipoPessoa().equals(TipoPessoa.Fisica)) {
			gerador.setCpf(documento);
		}
		if (gerador.getUsuario().getTipoPessoa().equals(TipoPessoa.Juridica)) {
			gerador.setCnpj(documento);
		}
		String senhaCriptografada = CriptografiaSenha.encriptPassword(gerador.getUsuario().getSenha());
		gerador.getUsuario().setSenha(senhaCriptografada);
		boolean geradorCadastrado = geradorService.incluirGerador(gerador);
		gerador.getUsuario().setEndereco(endereco);
		
		// Se o gerador foi cadastrado, redireciona para a página inicial.
		if (geradorCadastrado == true) {
			logonMB.setCurrentUser(gerador.getUsuario().getNome());
			logonMB.setUsuarioGerador(true);
			logonMB.setUsuario(gerador.getUsuario());
			logonMB.setGerador(gerador);
			Utils.addDetailMessage("Cadastro realizado com sucesso! Comece a reciclar agora mesmo!");
	        Faces.getExternalContext().getFlash().setKeepMessages(true);
	        Faces.redirect(adminConfig.getIndexPage());
		} else {
			// Se o gerador não foi cadastrado porque o e-mail informado já estava cadastrado, retorna mensagem de erro.
			FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, "O e-mail informado já foi cadastrado.", "O e-mail informado já foi cadastrado."));
		}
		
	}

	/** TODO: generated by FrameWeb. Should be documented. */
	public void alterarGerador() {
	
	}

	/** TODO: generated by FrameWeb. Should be documented. */
	public String excluirGerador() {
		// FIXME: auto-generated method stub
		return null;
	}

	/** TODO: generated by FrameWeb. Should be documented. */
	public Gerador consultarGerador(Long idGerador) {
		return null;
	}

	/** Getter for gerador. */
	public Gerador getGerador() {
		return gerador;
	}

	/** Setter for gerador. */
	public void setGerador(Gerador gerador) {
		this.gerador = gerador;
	}

	/** Getter for endereco. */
	public Endereco getEndereco() {
		return endereco;
	}

	/** Setter for endereco. */
	public void setEndereco(Endereco endereco) {
		this.endereco = endereco;
	}

	/** Getter for repeteSenha. */
	public String getRepeteSenha() {
		return repeteSenha;
	}

	/** Setter for repeteSenha. */
	public void setRepeteSenha(String repeteSenha) {
		this.repeteSenha = repeteSenha;
	}

	public String getDocumento() {
		return documento;
	}

	public void setDocumento(String documento) {
		this.documento = documento;
	}

}