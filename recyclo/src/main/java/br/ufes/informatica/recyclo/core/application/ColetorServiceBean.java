package br.ufes.informatica.recyclo.core.application;

import javax.ejb.EJB;
import javax.ejb.Stateless;

import br.ufes.informatica.recyclo.core.domain.Coletor;
import br.ufes.informatica.recyclo.core.persistence.ColetorDAO;
import br.ufes.informatica.recyclo.core.persistence.EnderecoDAO;
import br.ufes.informatica.recyclo.core.persistence.MaterialDAO;
import br.ufes.informatica.recyclo.core.persistence.MunicipioDAO;
import br.ufes.informatica.recyclo.core.persistence.UsuarioDAO;

/** TODO: generated by FrameWeb. Should be documented. */
@Stateless
public class ColetorServiceBean implements ColetorService {
	/** Serialization id (using default value, change if necessary). */
	private static final long serialVersionUID = 1L;
	
	@EJB
	private UsuarioDAO usuarioDAO;

	/** TODO: generated by FrameWeb. Should be documented. */
	@EJB
	private ColetorDAO coletorDAO;

	/** TODO: generated by FrameWeb. Should be documented. */
	@EJB
	private MunicipioDAO municipioDAO;

	/** TODO: generated by FrameWeb. Should be documented. */
	@EJB
	private MaterialDAO materialDAO;

	/** TODO: generated by FrameWeb. Should be documented. */
	@EJB
	private EnderecoDAO enderecoDAO;

	/** TODO: generated by FrameWeb. Should be documented. */
	@Override
	public boolean incluirColetor(Coletor coletor) {
		
		// Verifica se já existe um usuário cadastrado com o e-mail informado.
		int quantidade = usuarioDAO.verificaEmailRegistrado(coletor.getUsuario());
		if (quantidade >= 1) {
			return false;
		}
	
		// Chama o usuarioDAO para armazenar as informacoes associadas à tabela Usuario.
		usuarioDAO.save(coletor.getUsuario());
		
		// Chama o coletorDAO para armzazenar as informacoes associadas à tabela Coletor.
		coletorDAO.save(coletor);
		
		// Retorna true se o coletor foi cadastrado.
		return true;

	}

}